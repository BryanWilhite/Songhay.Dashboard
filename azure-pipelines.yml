name: $(System.TeamProject)_$(Build.DefinitionName)_$(Build.SourceBranchName)_$(Build.BuildId)

variables:
  BuildConfiguration: 'Release'
  RepoName: 'Songhay.Dashboard'

trigger:
  batch: false
  branches:
    include:
    - master
    - releases/*
  paths:
    exclude:
    - /azure*.yml
    - Songhay.Dashboard.Shell.Tests/*
    - Songhay.Dashboard.Tests/*

resources:
- repo: self

queue:
  name: Hosted VS2017

steps:
- task: PowerShell@2
  displayName: 'npm: install `clean-css-cli` globally'
  inputs:
    targetType: 'inline'
    script: '& npm i -g clean-css-cli'

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: restore
    projects: '**/*.csproj'

- task: Npm@1
  displayName: 'npm install'
  inputs:
    workingDir: $(RepoName)/Client
    verbose: true

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    projects: |
     **/$(RepoName).csproj
     **/$(RepoName).Tests.csproj
    arguments: '--configuration $(BuildConfiguration)'

- task: mattlabrum.build-task.custom-build-task.downloadsSecureFile@0
  displayName: 'Download Secure File 7b7b494f-fe60-4ad6-90dc-f2abc430f4d6'
  inputs:
    fileInput: '7b7b494f-fe60-4ad6-90dc-f2abc430f4d6'
    targetPath: $(RepoName)

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    projects: '**/$(RepoName).Tests/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: publish
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
