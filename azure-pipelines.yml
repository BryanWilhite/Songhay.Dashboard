name: $(System.TeamProject)_$(Build.DefinitionName)_$(Build.SourceBranchName)_$(Build.BuildId)

pool:
  vmImage: windows-latest

variables:
  buildConfiguration: Release
  buildPlatform: Any CPU
  buildArtifactStagingDir: $(Build.ArtifactStagingDirectory)
  buildLocalPath: $(Build.Repository.LocalPath)
  buildSourcesDir: $(Build.SourcesDirectory)
  commonTestResultsDir: $(Common.TestResultsDirectory)
  repoName: Songhay.Dashboard

resources:
- repo: self

steps:
- powershell: |
    Write-Host "displaying build locations..."
    Write-Host "buildArtifactStagingDir: $(Build.ArtifactStagingDirectory)"
    Write-Host "buildLocalPath: $(Build.Repository.LocalPath)"
    Write-Host "buildSourcesDir: $(Build.SourcesDirectory)"
    Write-Host "commonTestResultsDir: $(Common.TestResultsDirectory)"
  displayName: view build locations

- task: UseDotNet@2
  displayName: use .NET SDK 6.x
  inputs:
    packageType: sdk
    version: 6.x

- powershell: |
    dotnet --info
  displayName: dotnet --info

- powershell: |
    Write-Host "displaying current directory (it should be ``$(buildSourcesDir)``)..."
    Get-ChildItem -Path .\
  displayName: view current directory

- powershell: |
    dotnet restore $(repoName).sln  --verbosity normal
  displayName: dotnet restore

- powershell: |
    dotnet build $(repoName).sln  --configuration $(buildConfiguration)
  displayName: dotnet build [$(buildConfiguration)]

- powershell: |
    dotnet test $(repoName).Tests\$(repoName).Tests.fsproj --logger:trx --results-directory:$(commonTestResultsDir) --verbosity:normal
  displayName: dotnet test [$(repoName).Tests]

- powershell: |
    dotnet test $(repoName).Server.Tests\$(repoName).Server.Tests.fsproj --logger:trx --results-directory:$(commonTestResultsDir) --verbosity:normal
  displayName: dotnet test [$(repoName).Server.Tests]

# - powershell: |
#     Write-Host "displaying ArtifactStagingDirectory: ``$(Build.ArtifactStagingDirectory)``..."
#     Get-ChildItem -Path "$(Build.ArtifactStagingDirectory)"
#     Get-Content -Path "$(Build.ArtifactStagingDirectory)\$(repoName).Client.deploy-readme.txt"
#     Get-Content -Path "$(Build.ArtifactStagingDirectory)\$(repoName).Server.deploy-readme.txt"
#   displayName: view `$(Build.ArtifactStagingDirectory)`

# - task: AzureRmWebAppDeployment@4
#   displayName: deploy published artifact [STAGING]
#   inputs:
#     azureSubscription: 'Songhay System (Subscription scope; songhay-system-resources-free)'
#     packageForLinux: $(Build.ArtifactStagingDirectory)/$(repoName).Server.zip
#     WebAppName: songhay-system-staging
