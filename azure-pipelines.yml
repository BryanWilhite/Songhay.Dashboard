name: $(System.TeamProject)_$(Build.DefinitionName)_$(Build.SourceBranchName)_$(Build.BuildId)

pool:
  vmImage: windows-latest

variables:
  buildConfiguration: Release
  buildPlatform: Any CPU
  repoName: Songhay.Dashboard
  publishedArtifactName: bolero-drop

resources:
- repo: self

steps:
- task: UseDotNet@2
  displayName: use .NET SDK 6.x
  inputs:
    packageType: sdk
    version: 6.x

- powershell: |
    dotnet --info
  displayName: dotnet --info

- task: DotNetCoreCLI@2
  displayName: run `dotnet --info`
  inputs:
    command: 'custom'
    custom: '--info'

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.fsproj'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    projects: |
     **/$(repoName).fsproj
     **/$(repoName).Tests.fsproj
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    projects: |
      '**/$(repoName).Tests/*.fsproj'
      '**/$(repoName).Server.Tests/*.fsproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish (Blazor Server)'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: './$(RepoName).Server/$(RepoName).Server.fsproj'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'

- powershell: |
    Write-Host "displaying ArtifactStagingDirectory: ``$(Build.ArtifactStagingDirectory)``..."
    Get-ChildItem -Path "$(Build.ArtifactStagingDirectory)"
  displayName: view `$(Build.ArtifactStagingDirectory)`

- task: AzureRmWebAppDeployment@4
  displayName: deploy published artifact [STAGING]
  inputs:
    azureSubscription: 'Songhay System (Subscription scope; songhay-system-resources-free)'
    packageForLinux: $(Build.ArtifactStagingDirectory)/$(repoName).Server.zip
    WebAppName: songhay-system-staging
