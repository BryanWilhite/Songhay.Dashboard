name: $(System.TeamProject)_$(Build.DefinitionName)_$(Build.SourceBranchName)_$(Build.BuildId)

variables:
  BuildConfiguration: 'Release'
  RepoName: 'Songhay.Dashboard'

trigger:
  batch: 'false'
  branches:
    include:
    - master
    - releases/*
  paths:
    exclude:
    - Songhay.Dashboard.Shell.Tests/*
    - Songhay.Dashboard.Tests/*

resources:
- repo: self

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core SDK 2.x'
  inputs:
    packageType: sdk
    version: 2.x

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: restore
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    projects: |
     **/$(RepoName).Shell.csproj
     **/$(RepoName).Shell.Tests.csproj
    arguments: '--configuration $(BuildConfiguration)'

- task: downloadsSecureFile@0
  inputs:
    fileInput: '3778f6bc-1815-4b14-9690-42eef6466ddf'
    targetPath: $(RepoName).Shell
    targetName: 'app-settings.songhay-system.json'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    projects: '**/$(RepoName).Shell.Tests/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '$(RepoName).Shell/*.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
